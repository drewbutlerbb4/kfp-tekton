diff a/frontend/src/pages/RunDetails.tsx b/frontend/src/pages/RunDetails.tsx	(rejected hunks)
@@ -22,12 +22,7 @@ import * as React from 'react';
 import { Link, Redirect } from 'react-router-dom';
 import { GkeMetadata, GkeMetadataContext } from 'src/lib/GkeMetadata';
 import { useNamespaceChangeEvent } from 'src/lib/KubeflowClient';
-import {
-  ExecutionHelpers,
-  getExecutionsFromContext,
-  getKfpRunContext,
-  getTfxRunContext,
-} from 'src/lib/MlmdUtils';
+import { ExecutionHelpers, getExecutionsFromContext, getRunContext } from 'src/lib/MlmdUtils';
 import { classes, stylesheet } from 'typestyle';
 import {
   NodePhase as ArgoNodePhase,
@@ -737,20 +732,13 @@ class RunDetails extends Page<RunDetailsInternalProps, RunDetailsState> {
       let mlmdRunContext: Context | undefined;
       let mlmdExecutions: Execution[] | undefined;
       // Get data about this workflow from MLMD
-      if (workflow.metadata?.name) {
-        try {
-          try {
-            mlmdRunContext = await getTfxRunContext(workflow.metadata.name);
-          } catch (err) {
-            logger.warn(`Cannot find tfx run context (this is expected for non tfx runs)`, err);
-            mlmdRunContext = await getKfpRunContext(workflow.metadata.name);
-          }
-          mlmdExecutions = await getExecutionsFromContext(mlmdRunContext);
-        } catch (err) {
-          // Data in MLMD may not exist depending on this pipeline is a TFX pipeline.
-          // So we only log the error in console.
-          logger.warn(err);
-        }
+      try {
+        mlmdRunContext = await getRunContext(workflow);
+        mlmdExecutions = await getExecutionsFromContext(mlmdRunContext);
+      } catch (err) {
+        // Data in MLMD may not exist depending on this pipeline is a TFX pipeline.
+        // So we only log the error in console.
+        logger.warn(err);
       }
 
       // Build runtime graph
